#!/bin/bash

hookdir=$(pwd)
PHPCS_CODING_STANDARD="DriveCurrent"
PHPCS_BIN="/usr/bin/phpcs"
logfile="$hookdir/hooks/pre-commit.log"
TMP_DIR="$hookdir/hooks/source/"

rightNow=`date`

echo -e "$rightNow: Starting pre-receive hook.\n" >> $logfile

ERRORS=""
RETVAL=0

# <oldrev> <newrev> <refname>
while read oldrev newrev ref;
do
    if [ "$oldrev" = "0000000000000000000000000000000000000000" ]; then
        continue
    fi
    if [ "$newrev" = "0000000000000000000000000000000000000000" ]; then
        continue
    fi
    # check commit message
    message_check=$(python $hookdir/hooks/pre-receive.py $oldrev $newrev $ref)
    if [ "$?" -ne "0" ]; then
       ERRORS=$message_check
       RETVAL=1
       break;
    fi

    # code sniffer check
    list=$(git diff-tree --name-only -r $oldrev..$newrev | grep -e '.php')

    for file in ${list}; do

        dirs_changed=$(dirname $TMP_DIR$file)/

        if [[ $dirs_changed =~ .*(PHPUnit\/|Smarty\/|movecars\/|\/library\/netsuite|smarty\/|fedex\/|Selenium\/WebDriver\/|Selenium\/FbWebDriver\/|Selenium\/FbWebDriver.390c600\/|CodeSniffer|\/).* ]]; then
            echo "$file --> Skipping PHPCodeSniffer check" >> $logfile
        else
            mkdir -p $dirs_changed
            git show ${newrev}:${file} > $TMP_DIR/$file
            OUTPUT=$($PHPCS_BIN -n --standard=$PHPCS_CODING_STANDARD $TMP_DIR/$file)
            if [ "$?" -ne "0" ]; then
                ERRORS=${ERRORS}${OUTPUT}
                RETVAL=1
                echo ""
            else
                echo "$file --> Passed PHPCodeSniffer check" >> $logfile
            fi
        fi

    done
done

echo "$ERRORS" >> $logfile
echo "$ERRORS"

rm -rf $TMP_DIR

echo -e "\nEnd of pre-receive hook." >> $logfile

exit $RETVAL
